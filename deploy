#!/bin/sh
cd ..
API=$2-api
WEB=$2-web

if [ "$#" -ne 2 ]
then
  echo "Usage: deploy [env] [project] - env is develop, staging, demo, production - project can be supervision concreet..."
  exit 1
fi

  case $1 in
	develop)
		BRANCH=develop
		ENV=develop
		;;
	staging)
		BRANCH=staging
		ENV=staging
		break
		;;
        demo)
                BRANCH=master
                ENV=demo
		break
                ;;
        production)
                BRANCH=master
		ENV=production
                break
                ;;
	*)
		echo "This environment do not exist : "$1
		echo "Usage: deploy [env] [project] - env is develop, staging, demo, production - project can be ejust supervision concreet..."		
		exit 1
		;;
  esac

if [ -e server/ecosystem.config.js ]
then
    CONFIG_FILE=server/ecosystem.config.js
else
    CONFIG_FILE=server/server.js
fi


RUN_PM2="cd $HOME/$2/$ENV/$API && NODE_ENV=$ENV pm2 restart $ENV-$2"
#RUN_PM2="cd $HOME/$2/$ENV/$API && NODE_ENV=$ENV pm2 start $CONFIG_FILE --env $ENV --name $ENV-$2"

echo 'Running :' $RUN_PM2

RESTART_PM2="pm2 restart $ENV-$2 -f"

GIT_RESET="git reset --hard origin/$BRANCH && git clean -f"
GIT_CO="git co $BRANCH && git pull origin $BRANCH && npm i"
COPY_BUNDLE="cp -a $HOME/src/$WEB/build/* $HOME/$2/$ENV/$API/client"
(mkdir -p $HOME/$2/$ENV/$API && cd $HOME/src/$API && eval $GIT_RESET && eval $GIT_CO && rm -Rf $HOME/$2/$ENV/$API && mkdir -p $HOME/$2/$ENV/$API/client && cp -a * $HOME/$2/$ENV/$API) && (cd $HOME/src/$WEB && eval $GIT_RESET && eval $GIT_CO && rm -Rf build && eval $GIT_PULL && npm run build:$ENV && eval $COPY_BUNDLE && eval $RUN_PM2 && eval $RESTART_PM2)
